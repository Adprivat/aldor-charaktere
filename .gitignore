################################################################################
# Root .gitignore (Next.js static export project)
# Konsolidiert & bereinigt – Dubletten entfernt.
################################################################################

## Node / Package Artefakte
node_modules/
*.tgz
/.pnp
.pnp.js
.yarn/
.yarn-integrity
yarn.lock
pnpm-lock.yaml

## Build / Output
.next/
out/
build/
dist/
coverage/
*.lcov

## Logs & Debug
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
*.pid
*.pid.lock
*.seed

## Caches
.eslintcache
.cache/
.parcel-cache/
.nyc_output/
.npm/

## TypeScript / Next Generated
*.tsbuildinfo
next-env.d.ts

## Environment (niemals committen)
.env
.env.*.local
.env.local

## Hosting / Platform
.vercel/
.serverless/

## IDE / Editor
.vscode/
.idea/
*.swp
*.swo
*.orig

## OS / System Files
Thumbs.db
.DS_Store

## Misc / Backups / Temp
*.pem
*.backup
*.bak
*.tmp
*.temp

## Legacy / Unused Framework Outputs (präventiv)
.nuxt/
.vuepress/dist/
.fusebox/
.dynamodb/
.tern-port
jspm_packages/

################################################################################
# Hinweise:
# 1. Wenn du das statische Verzeichnis 'out/' versionieren willst (z.B. für GitHub Pages
#    ohne CI), entferne die Zeile 'out/'. Standard: ignorieren und per Build erzeugen.
# 2. 'package-lock.json' bleibt im Repo für deterministische Builds.
################################################################################
